generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  email        String    @unique
  name         String?
  role         Role      @default(USER)
  createdAt    DateTime  @default(now())
  password     String
  profileImage String?
  comments     Comment[]
  likes        Like[]
  posts        Post[]
  profile      Profile?  @relation
}

model Profile {
  id             Int        @id @default(autoincrement())
  firstName      String
  lastName       String?
  email          String     @unique
  phoneNumber    String?
  birthDate      DateTime?
  gender         String?
  bio            String?
  profilePicture String?
  socialLinks    String[]
  userId         Int        @unique 
  updatedAt      DateTime   @updatedAt
  user           User       @relation(fields: [userId], references: [id]) 
}

model Event {
  id                Int                 @id @default(autoincrement())
  eventName        String
  eventType        String
  startDate        DateTime
  endDate          DateTime
  city             String
  address          String
  description      String?             
  organizerName    String
  organizerEmail   String
  organizerPhone   String
  maxParticipants  Int
  isPaid           Boolean
  feeAmount        Float?             
  paymentDetails   String?            
  participants     Participant[]      
  programSchedule   ProgramSchedule[]
  speakers         Speaker[]
}

model Participant {
  id      Int      @id @default(autoincrement())
  name    String
  email   String
  phone   String?
  event   Event    @relation(fields: [eventId], references: [id])
  eventId Int
}

model ProgramSchedule {
  id        Int      @id @default(autoincrement())
  session   String
  startTime String
  endTime   String
  event     Event    @relation(fields: [eventId], references: [id])
  eventId   Int
}

model Speaker {
  id       Int      @id @default(autoincrement())
  name     String
  bio      String?
  event    Event    @relation(fields: [eventId], references: [id])
  eventId  Int
}

model Post {
  id         Int            @id @default(autoincrement())
  createdAt  DateTime       @default(now())
  updatedAt  DateTime       @updatedAt
  published  Boolean        @default(false)
  title      String
  authorId   Int
  content    String
  comments   Comment[]
  likes      Like[]
  author     User           @relation(fields: [authorId], references: [id])
  categories PostCategory[]
}

model Comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  content   String
  postId    Int
  authorId  Int
  author    User     @relation(fields: [authorId], references: [id])
  post      Post     @relation(fields: [postId], references: [id])
}

model Like {
  id     Int  @id @default(autoincrement())
  postId Int
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  user   User @relation(fields: [userId], references: [id])
}

model Category {
  id    Int            @id @default(autoincrement())
  name  String
  posts PostCategory[]
}

model PostCategory {
  postId     Int
  categoryId Int
  Category   Category @relation(fields: [categoryId], references: [id])
  Post       Post     @relation(fields: [postId], references: [id])

  @@id([postId, categoryId])
}

enum Role {
  USER
}
